---
title: "week3"
format: html
---

```{r}
library(here)
library(tidyverse)
library(sf)
library(tmap)
```

```{r}
sb_protected_areas <- st_read(here("week3", "data", "cpad_super_units_sb.shp")) |>  
  st_transform("ESRI:102009")

sb_city_boundaries <- st_read(here("week3", "data", "sb_city_boundaries_2003.shp")) |> 
  st_transform("ESRI:102009")

sb_county_boundary <- st_read(here("week3", "data", "sb_county_boundary_2020.shp")) |> 
  st_transform("ESRI:102009")

aves <- st_read(here("week3", "data", "aves_observations_2020_2024.shp")) |> 
  st_transform("ESRI:102009")
```

```{r}
aves_PA_subset <- sb_protected_areas[aves, ] # Subset

nrow(aves_PA_subset) # Check number of rows
```


```{r}
tm_shape(sb_county_boundary) +
  tm_fill() +
  tm_shape(sb_protected_areas) +
    tm_borders(lwd = 1, col = "darkgreen") +
    tm_fill(col = "darkgreen", alpha = 0.2) +
  tm_shape(aves_PA_subset) +
    tm_dots(col = "lightpink")
```
```{r}
aves_PA_join <- st_join(aves, sb_protected_areas) # default: `st_intersects` 

nrow(aves_PA_join) # Check number of rows
```

```{r}
tm_shape(sb_county_boundary) +
  tm_fill() +
  tm_shape(sb_protected_areas) +
  tm_borders(lwd = 1, col = "purple") +
    tm_fill(col = "purple", alpha = 0.2) +
  tm_shape(aves_PA_join) +
    tm_dots(col = "gold")
```

```{r}
st_crs(sb_protected_areas)$units # Check if units are in meters
```

```{r}
PA_buffer_5km <- st_buffer(sb_protected_areas, dist = 5000) # Create 5000 m buffer around PAs
```

```{r}
aves_buffer_subset <- PA_buffer_5km[aves, ] # Subset

nrow(aves_buffer_subset) # Check number of rows
```

```{r}
tm_shape(sb_county_boundary) +
  tm_fill() +
  tm_shape(sb_protected_areas) +
    tm_borders(lwd = 1, col = "purple") +
    tm_fill(col = "purple", alpha = 0.2) +
  tm_shape(aves_buffer_subset) +
  tm_dots(col = "gold")
```

```{r}
goleta <- sb_city_boundaries %>% 
  filter(NAME == "Goleta")

```

```{r}
goleta_buffer_15km <- st_buffer(goleta, dist = 15000)
```

```{r}
goleta_PAs_within <- st_within(sb_protected_areas, goleta_buffer_15km)
goleta_PAs_intersect <- st_intersects(sb_protected_areas, goleta_buffer_15km)
goleta_PAs_intersection <- st_intersection(sb_protected_areas, goleta_buffer_15km)
```

```{r}
goleta_PAs_join <- st_join(sb_protected_areas, goleta, st_is_within_distance, dist = 15000)
```

```{r}
# Subset PA to Dangermond Preserve
dangermond <- sb_protected_areas |>
  dplyr::filter(UNIT_NAME == "Jack and Laura Dangermond Preserve")
```

```{r}
danger_dist <- st_distance(goleta, dangermond) # Compute the distance between geometries edges
```

```{r}
# Calculate the geometric center
dangermond_centroid <- st_centroid(dangermond)
goleta_centroid <- st_centroid(goleta)

danger_dist_centroid <- st_distance(goleta_centroid, dangermond_centroid) # Compute the distance between geometries edges
```

```{r}
# Check if the distance matrices are equal
danger_dist == danger_dist_centroid
```

